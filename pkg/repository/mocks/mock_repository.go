// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/repository/repository.go

// Package mock_repository is a generated GoMock package.
package mock_repository

import (
	context "context"
	entity "finance-tg-bot/pkg/entity"
	slog "log/slog"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockDocumentRepo is a mock of DocumentRepo interface.
type MockDocumentRepo struct {
	ctrl     *gomock.Controller
	recorder *MockDocumentRepoMockRecorder
}

// MockDocumentRepoMockRecorder is the mock recorder for MockDocumentRepo.
type MockDocumentRepoMockRecorder struct {
	mock *MockDocumentRepo
}

// NewMockDocumentRepo creates a new mock instance.
func NewMockDocumentRepo(ctrl *gomock.Controller) *MockDocumentRepo {
	mock := &MockDocumentRepo{ctrl: ctrl}
	mock.recorder = &MockDocumentRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDocumentRepo) EXPECT() *MockDocumentRepoMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockDocumentRepo) Get(ctx context.Context, log *slog.Logger, filter string) ([]entity.DBDocument, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", ctx, log, filter)
	ret0, _ := ret[0].([]entity.DBDocument)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockDocumentRepoMockRecorder) Get(ctx, log, filter interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockDocumentRepo)(nil).Get), ctx, log, filter)
}

// Save mocks base method.
func (m *MockDocumentRepo) Save(ctx context.Context, log *slog.Logger, doc entity.DBDocument) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Save", ctx, log, doc)
	ret0, _ := ret[0].(error)
	return ret0
}

// Save indicates an expected call of Save.
func (mr *MockDocumentRepoMockRecorder) Save(ctx, log, doc interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Save", reflect.TypeOf((*MockDocumentRepo)(nil).Save), ctx, log, doc)
}
